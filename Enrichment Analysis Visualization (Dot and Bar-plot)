import pandas as pd

# Load the enrichment result from g:Profiler
result = pd.read_csv("/content/enrichment_significant_DEGs.csv")
# Filter significant terms (e.g., p < 0.05) and select top 20 for plotting
top_results = result[result['p_value'] < 0.05].sort_values('p_value').head(20)
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Add a column for color scale
top_results['-log10(p_value)'] = -np.log10(top_results['p_value'])

plt.figure(figsize=(10, 6))

ax = plt.gca() # Get the current Axes object

scatter = sns.scatterplot(
    data=top_results,
    y='name',
    x='intersection_size',
    size='term_size',
    hue='-log10(p_value)',         # Color based on -log10(p)
    palette='Reds',             # Bright green to purple
    sizes=(50, 300),
    legend='brief',
    ax=ax # Explicitly tell seaborn to plot on this Axes
)

plt.title('GO/KEGG Enrichment Dot Plot')
plt.xlabel('Genes in DEG list')
plt.ylabel('Enriched Term')
plt.gca().invert_yaxis()  # Optional: largest enrichment at top

# Add color bar
norm = plt.Normalize(top_results['-log10(p_value)'].min(), top_results['-log10(p_value)'].max())
sm = plt.cm.ScalarMappable(cmap="Reds", norm=norm)
sm.set_array([])
scatter.get_legend().remove()  # Remove auto legend
plt.colorbar(sm, label='-log10(p-value)', ax=ax)  # Pass the Axes object to colorbar

plt.tight_layout()
plt.show()

# For barplot, use -log10(p-value) to show significance
top_results['-log10(p_value)'] = -np.log10(top_results['p_value'])

plt.figure(figsize=(10, 6))
sns.barplot(
    data=top_results,
    x='-log10(p_value)',
    y='name',
    palette='Reds'
)

plt.title('Top Enriched GO/KEGG Terms')
plt.xlabel('-log10(p-value)')
plt.ylabel('Enriched Term')
plt.tight_layout()
plt.show()
