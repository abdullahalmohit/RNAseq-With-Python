# === Load TPM Matrix ===
import pandas as pd

# Read TPM expression matrix from Excel file.
# Rows = genes, Columns = samples. Set gene IDs as the index.
tpm_df = pd.read_excel("Your file path", index_col=0)

# Optional: Transpose the dataframe if samples are in rows instead of columns
# tpm_df = tpm_df.T

# Preview the data
print(tpm_df.head())

# === Import Additional Libraries for Plotting ===
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# === Calculate log2 Fold Change ===
# Choose the first sample as the control (you can modify this)
control_sample = tpm_df.columns[0]

# Compute log2 fold change for each gene in each sample relative to the control
# Add a small value (1e-9) to avoid division by zero or log(0)
log2fc_df = np.log2(tpm_df.divide(tpm_df[control_sample], axis=0) + 1e-9)

# === Define Genes to Plot ===
# Provide a list of genes for which to visualize expression changes
genes = ["AT1G01010", "AT1G01020", "AT1G01030"]  # Replace with your own gene list

# === Reshape Data for Seaborn Barplot ===
# Extract only the rows corresponding to the selected genes
plot_data = log2fc_df.loc[genes].reset_index()

# Convert the data from wide to long format for seaborn plotting
# This creates columns: Gene, Sample, log2FC
plot_data = pd.melt(plot_data, id_vars='Geneid', var_name='Sample', value_name='log2FC')
plot_data.rename(columns={'Geneid': 'Gene'}, inplace=True)

# === Plot Barplot ===
plt.figure(figsize=(12, 6))

# Create a grouped barplot: samples on x-axis, log2FC on y-axis, different bars for each gene
sns.barplot(data=plot_data, x="Sample", y="log2FC", hue="Gene", palette="Set2")

# Add a horizontal line at y=0 to indicate no change
plt.axhline(0, color='gray', linestyle='--')

# Add title and axis labels
plt.title("Log₂ Fold Change Expression of Selected Genes")
plt.ylabel("log₂ Fold Change")
plt.xticks(rotation=45)        # Rotate x-axis labels for better visibility
plt.legend(title="Gene")       # Add legend with title
plt.tight_layout()             # Adjust layout to avoid label cutoff
plt.show()
